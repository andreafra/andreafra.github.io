---
import Layout from "@layouts/Layout.astro"

import { getCollection } from "astro:content"

let allItems = await getCollection("articles")

allItems = allItems
	.filter((a) => !a.data.hidden)
	.sort((a, b) => b.data.publishDate.getTime() - a.data.publishDate.getTime())
---

<Layout title="Andrea Franchini | Articles">
	<main class="px-6 text-textcolor-2 dark:text-textcolor-2-dark">
		<h1
			class="inline-block font-bold text-3xl text-textcolor-1 dark:text-textcolor-1-dark border-textcolor-2 dark:border-textcolor-2-dark border-b-[1px]"
		>
			Articles
		</h1>
		<ul>
			{
				allItems.map((item, index, list) => {
					const showDate =
						index > 0 &&
						list[index - 1].data.publishDate.getUTCFullYear() ==
							item.data.publishDate.getUTCFullYear()

					return (
						<li class="border-textcolor-2 dark:border-textcolor-2 border-[1px] even:border-l-0 odd:border-r-0 border-t-0">
							<a href={`/${item.slug}`} class="flex flex-col p-4">
								<h2 class="text-xl font-bold text-textcolor-1 dark:text-textcolor-1-dark">
									{item.data.title}
								</h2>
								<time
									itemprop="publishDate"
									class="font-bold"
									datetime={item.data.publishDate.toISOString()}
								>
									{item.data.publishDate.toLocaleString(
										undefined,
										{
											year: "numeric",
										}
									)}
								</time>
								<p>{item.data.description}</p>
								<ul class="flex flex-none pt-4 mt-auto text-textcolor-3 dark:text-textcolor-3-dark justify-start gap-1 flex-wrap">
									{item.data.tags.map((tag) => (
										<li class="inline-block px-2 rounded-full border-[1px] border-textcolor-3 dark:border-textcolor-3-dark">
											{tag}
										</li>
									))}
								</ul>
							</a>
						</li>
					)
				})
			}
		</ul>
	</main>
</Layout>
